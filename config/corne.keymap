/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos { compatible = "zmk,combos"; };

    macros {
        pwd: pwd {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(G) &kp E &kp R &kp N4 &kp L &kp T &kp N0 &kp F &kp LS(R) &kp N1 &kp V &kp N1 &kp N4>;
            label = "PWD";
        };
    };

    behaviors {
        ht: ht {
            compatible = "zmk,behavior-hold-tap";
            label = "Hold/tap";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "balanced";
            quick-tap-ms = <0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB         &kp Q               &kp W           &kp E                   &kp R           &kp T        &kp Y    &kp U            &kp I              &kp O            &kp P                   &kp LEFT_BRACKET
&kp LEFT_SHIFT  &ht LEFT_CONTROL A  &ht LEFT_ALT S  &ht LEFT_SHIFT D        &ht LEFT_GUI F  &kp G        &kp H    &ht RIGHT_GUI J  &ht RIGHT_SHIFT K  &ht RIGHT_ALT L  &ht RIGHT_CONTROL SEMI  &kp SINGLE_QUOTE
&kp LEFT_ALT    &kp Z               &kp X           &kp C                   &kp V           &kp B        &kp N    &kp M            &kp COMMA          &kp DOT          &kp FSLH                &kp RIGHT_BRACKET
                                                    &ht LEFT_GUI BACKSPACE  &mo 1           &kp SPACE    &kp RET  &mo 2            &kp DELETE
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp ESC  &kp N1          &kp N2            &kp N3          &kp N4                &kp N5    &kp N6  &kp N7                 &kp N8           &kp N9             &kp N0            &kp TILDE
&trans   &kp LEFT_ARROW  &kp DOWN_ARROW    &kp UP          &kp RIGHT             &trans    &trans  &kp HOME               &kp PAGE_DOWN    &kp PG_UP          &kp END           &trans
&trans   &kp LESS_THAN   &kp LEFT_BRACKET  &kp LEFT_BRACE  &kp LEFT_PARENTHESIS  &trans    &trans  &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACE  &kp RIGHT_BRACKET  &kp GREATER_THAN  &trans
                                           &trans          &trans                &trans    &trans  &mo 3                  &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp ESC  &kp N1         &kp N2          &kp N3          &kp N4                &kp N5    &kp N6  &kp N7                 &kp N8           &kp N9         &kp N0            &kp GRAVE
&trans   &kp PLUS       &kp UNDERSCORE  &kp EQUAL       &kp MINUS             &trans    &trans  &kp QUESTION           &kp COLON        &kp AMPERSAND  &kp PIPE          &trans
&trans   &kp LESS_THAN  &kp LBKT        &kp LEFT_BRACE  &kp LEFT_PARENTHESIS  &trans    &trans  &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACE  &kp RBKT       &kp GREATER_THAN  &trans
                                        &trans          &mo 3                 &trans    &trans  &trans                 &trans
            >;
        };

        functional {
            bindings = <
&kp F1  &kp F2  &kp F3      &kp F4             &kp F5           &kp F6    &kp F7  &kp F8      &kp F9      &kp F10     &kp F11         &kp F12
&trans  &trans  &kp K_MUTE  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &pwd      &trans  &trans      &trans      &trans      &trans          &trans
&trans  &trans  &trans      &trans             &trans           &trans    &trans  &bt BT_NXT  &bt BT_PRV  &bt BT_CLR  &bt BT_CLR_ALL  &trans
                            &trans             &trans           &trans    &trans  &trans      &trans
            >;
        };
    };
};
