/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB         &kp Q  &kp W  &kp E         &kp R  &kp T        &kp Y    &kp U  &kp I         &kp O    &kp P     &kp GRAVE
&kp LEFT_SHIFT  &kp A  &kp S  &kp D         &kp F  &kp G        &kp H    &kp J  &kp K         &kp L    &kp SEMI  &kp SQT
&kp LCTRL       &kp Z  &kp X  &kp C         &kp V  &kp B        &kp N    &kp M  &kp COMMA     &kp DOT  &kp FSLH  &kp BACKSLASH
                              &kp LEFT_ALT  &mo 1  &kp SPACE    &kp RET  &mo 2  &kp LEFT_WIN
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp ESC         &kp N1               &kp N2          &kp N3        &kp N4           &kp N5           &kp N6   &kp N7  &kp N8    &kp N9   &kp N0   &kp BSPC
&kp LEFT_SHIFT  &kp LEFT_ARROW       &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW  &kp BACKSPACE    &kp F1   &kp F2  &kp F3    &kp F4   &kp F5   &kp F6
&kp LCTRL       &kp LA(PRINTSCREEN)  &kp LG(LS(S))   &kp LC(Z)     &kp LC(Y)        &kp DELETE       &kp F7   &kp F8  &kp F9    &kp F10  &kp F11  &kp F12
                                                     &kp LGUI      &trans           &kp SPACE        &kp RET  &trans  &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp ESC           &kp LS(NUMBER_1)   &kp LS(NUMBER_2)  &kp LS(NUMBER_3)  &kp LS(NUMBER_4)  &kp LS(NUMBER_5)    &kp LS(NUMBER_6)  &kp LS(NUMBER_7)  &kp LS(NUMBER_8)  &kp LS(NUMBER_9)  &kp LS(NUMBER_0)  &kp BSPC
&kp LEFT_SHIFT    &kp C_VOLUME_DOWN  &kp C_VOLUME_UP   &trans            &trans            &kp LG(D)           &kp MINUS         &kp EQUAL         &kp LBKT          &kp RBKT          &kp LESS_THAN     &kp GREATER_THAN
&kp LEFT_CONTROL  &kp LA(LC(DEL))    &kp LC(LS(ESC))   &trans            &trans            &kp LA(F4)          &kp UNDER         &kp PLUS          &kp LBRC          &kp RBRC          &kp PAGE_DOWN     &kp PAGE_UP
                                                       &kp LGUI          &trans            &kp SPACE           &kp RET           &trans            &kp RALT
            >;
        };
    };
};
