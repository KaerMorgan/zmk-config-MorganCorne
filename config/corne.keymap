/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        toggle_game {
            bindings = <&tog 4>;
            key-positions = <38 39 0 11>;
        };
    };

    macros {
        pwd: pwd {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(G) &kp E &kp R &kp N4 &kp L &kp T &kp N0 &kp F &kp LS(R) &kp N1 &kp V &kp N1 &kp N4>;
            label = "PWD";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB         &kp Q  &kp W  &kp E                &kp R            &kp T        &kp Y    &kp U         &kp I             &kp O    &kp P     &kp LEFT_BRACKET
&kp LEFT_SHIFT  &kp A  &kp S  &kp D                &kp F            &kp G        &kp H    &kp J         &kp K             &kp L    &kp SEMI  &mt RIGHT_SHIFT SINGLE_QUOTE
&kp LEFT_ALT    &kp Z  &kp X  &kp C                &kp V            &kp B        &kp N    &kp M         &kp COMMA         &kp DOT  &kp FSLH  &kp RIGHT_BRACKET
                              &mt LEFT_GUI DELETE  &lt 1 BACKSPACE  &kp SPACE    &kp RET  &lt 2 DELETE  &kp LEFT_CONTROL
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp ESC         &kp N1          &kp N2          &kp N3              &kp N4     &kp N5       &kp N6   &kp N7        &kp N8            &kp N9   &kp N0   &kp TILDE
&kp LEFT_SHIFT  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP              &kp RIGHT  &none        &kp DOT  &kp DOT       &kp DOT           &kp DOT  &kp DOT  &kp DOT
&kp LCTRL       &kp HOME        &kp PAGE_DOWN   &kp PG_UP           &kp END    &none        &kp DOT  &kp DOT       &kp DOT           &kp DOT  &kp DOT  &kp DOT
                                                &mt LEFT_GUI ENTER  &trans     &kp SPACE    &kp RET  &lt 3 DELETE  &kp LEFT_CONTROL
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp ESC         &kp N1         &kp N2    &kp N3          &kp N4                &kp N5       &kp N6        &kp N7                 &kp N8           &kp N9         &kp N0            &kp GRAVE
&kp LEFT_SHIFT  &none          &none     &none           &kp EQUAL             &kp MINUS    &kp QUESTION  &kp COLON              &kp PIPE         &kp AMPERSAND  &none             &kp RIGHT_SHIFT
&kp LEFT_ALT    &kp LESS_THAN  &kp LBKT  &kp LEFT_BRACE  &kp LEFT_PARENTHESIS  &kp DOT      &kp DOT       &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACE  &kp RBKT       &kp GREATER_THAN  &kp RIGHT_ALT
                                         &kp LEFT_GUI    &kp BSPC              &kp SPACE    &kp ENTER     &trans                 &kp LGUI
            >;
        };

        functional {
            bindings = <
&kp F1             &kp F2           &kp F3           &kp F4               &kp F5         &kp F6        &kp F7         &kp F8   &kp F9         &kp F10      &kp F11     &kp F12
&kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp K_MUTE       &kp C_PLAY_PAUSE     &kp C_STOP     &pwd          &kp C_AC_HOME  &kp END  &kp PAGE_DOWN  &kp PAGE_UP  &kp INSERT  &trans
&kp LA(LC(DEL))    &kp LC(LS(ESC))  &kp PRINTSCREEN  &kp LA(PRINTSCREEN)  &kp LG(LS(S))  &kp LA(F4)    &trans         &trans   &bt BT_PRV     &bt BT_NXT   &bt BT_CLR  &bt BT_CLR_ALL
                                                     &trans               &trans         &trans        &trans         &trans   &trans
            >;
        };

        gaming_1 {
            bindings = <
&kp TAB    &kp Q  &kp W  &kp E         &kp R  &kp T        &kp Y  &kp U   &kp I      &kp O    &kp P     &kp LBKT
&kp LSHFT  &kp A  &kp S  &kp D         &kp F  &kp G        &kp H  &kp J   &kp K      &kp L    &kp SEMI  &kp APOS
&kp LCTRL  &kp Z  &kp X  &kp C         &kp V  &kp B        &kp N  &kp M   &kp COMMA  &kp DOT  &kp FSLH  &kp RIGHT_BRACKET
                         &kp LEFT_ALT  &mo 5  &kp SPACE    &none  &trans  &none
            >;

            label = "g1";
        };

        gaming_2 {
            bindings = <
&kp ESC    &kp N1  &kp W  &kp N2    &kp N3         &kp N4        &kp Y   &kp U   &kp I      &kp O    &kp P     &kp LBKT
&kp LSHFT  &kp A   &kp S  &kp D     &kp N5         &kp N6        &kp H   &kp J   &kp K      &kp L    &kp SEMI  &kp APOS
&kp LCTRL  &kp Z   &kp X  &kp C     &kp BACKSPACE  &kp DELETE    &kp N   &kp M   &kp COMMA  &kp DOT  &kp FSLH  &kp RIGHT_BRACKET
                          &kp LALT  &trans         &kp SPACE     &trans  &trans  &trans
            >;

            label = "g2";
        };
    };
};
